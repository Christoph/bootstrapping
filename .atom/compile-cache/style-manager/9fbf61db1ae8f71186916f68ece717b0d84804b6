{"source":".atom-text-editor,\n.atom-text-editor .gutter,atom-text-editor,atom-text-editor .gutter {\n  background-color: #2D2D2D;\n  color: #CCCCCC;\n}\n.atom-text-editor.is-focused .cursor,atom-text-editor .cursor {\n  border-color: #CCCCCC;\n}\n.atom-text-editor.is-focused .selection .region,atom-text-editor .selection .region {\n  background-color: #515151;\n}\n.atom-text-editor.is-focused .line-number.cursor-line-no-selection,\n.atom-text-editor.is-focused .line.cursor-line,atom-text-editor .line-number.cursor-line-no-selection,atom-text-editor .line.cursor-line {\n  background-color: #393939;\n}\n.syntax--comment {\n  color: #999999;\n}\n.syntax--keyword.syntax--operator.syntax--class,\n.syntax--constant.syntax--other,\n.syntax--source.syntax--php.syntax--embedded.line {\n  color: #CCCCCC;\n}\n.syntax--variable,\n.syntax--support.syntax--other.syntax--variable,\n.syntax--string.syntax--other.syntax--link,\n.syntax--entity.syntax--name.syntax--tag,\n.syntax--entity.syntax--other.syntax--attribute-name,\n.syntax--meta.syntax--tag,\n.syntax--declaration.syntax--tag {\n  color: #F2777A;\n}\n.syntax--constant.syntax--numeric,\n.syntax--constant.syntax--language,\n.syntax--support.syntax--constant,\n.syntax--constant.syntax--character,\n.syntax--variable.syntax--parameter,\n.syntax--punctuation.syntax--section.syntax--embedded,\n.syntax--keyword.syntax--other.syntax--unit {\n  color: #F99157;\n}\n.syntax--entity.syntax--name.syntax--class,\n.syntax--entity.syntax--name.syntax--type.syntax--class,\n.syntax--support.syntax--type,\n.syntax--support.syntax--class {\n  color: #FFCC66;\n}\n.syntax--string,\n.syntax--constant.syntax--other.syntax--symbol,\n.syntax--entity.syntax--other.syntax--inherited-class,\n.syntax--markup.syntax--heading {\n  color: #99CC99;\n}\n.syntax--keyword.syntax--operator,\n.syntax--constant.syntax--other.syntax--color {\n  color: #66CCCC;\n}\n.syntax--entity.syntax--name.syntax--function,\n.syntax--meta.syntax--function-call,\n.syntax--support.syntax--function,\n.syntax--keyword.syntax--other.syntax--special-method,\n.syntax--meta.syntax--block-level {\n  color: #6699CC;\n}\n.syntax--keyword,\n.syntax--storage,\n.syntax--storage.syntax--type,\n.syntax--entity.syntax--name.syntax--tag.syntax--css {\n  color: #CC99CC;\n}\n.syntax--invalid {\n  color: #CDCDCD;\n  background-color: #F2777A;\n}\n.syntax--meta.syntax--separator {\n  color: #CDCDCD;\n  background-color: #99CCCC;\n}\n.syntax--invalid.syntax--deprecated {\n  color: #CDCDCD;\n  background-color: #CC99CC;\n}\n.indent-guide {\n  color: #444444;\n}\n.invisible-character {\n  color: #444444;\n}\n","deprecationMessage":"Starting from Atom v1.13.0, the contents of `atom-text-editor` elements are no longer encapsulated within a shadow DOM boundary. This means you should stop using `:host` and `::shadow` pseudo-selectors, and prepend all your syntax selectors with `syntax--`. To prevent breakage with existing style sheets, Atom will automatically upgrade the following selectors:\n\n* `.atom-text-editor,\n.atom-text-editor .gutter,\n:host,\n:host .gutter` => `.atom-text-editor,\n.atom-text-editor .gutter,atom-text-editor,atom-text-editor .gutter`\n\n* `.atom-text-editor.is-focused .cursor,\n:host(.is-focused) .cursor` => `.atom-text-editor.is-focused .cursor,atom-text-editor .cursor`\n\n* `.atom-text-editor.is-focused .selection .region,\n:host(.is-focused) .selection .region` => `.atom-text-editor.is-focused .selection .region,atom-text-editor .selection .region`\n\n* `.atom-text-editor.is-focused .line-number.cursor-line-no-selection,\n.atom-text-editor.is-focused .line.cursor-line,\n:host(.is-focused) .line-number.cursor-line-no-selection,\n:host(.is-focused) .line.cursor-line` => `.atom-text-editor.is-focused .line-number.cursor-line-no-selection,\n.atom-text-editor.is-focused .line.cursor-line,atom-text-editor .line-number.cursor-line-no-selection,atom-text-editor .line.cursor-line`\n\n* `.comment` => `.syntax--comment`\n\n* `.keyword.operator.class,\n.constant.other,\n.source.php.embedded.line` => `.syntax--keyword.syntax--operator.syntax--class,\n.syntax--constant.syntax--other,\n.syntax--source.syntax--php.syntax--embedded.line`\n\n* `.variable,\n.support.other.variable,\n.string.other.link,\n.entity.name.tag,\n.entity.other.attribute-name,\n.meta.tag,\n.declaration.tag` => `.syntax--variable,\n.syntax--support.syntax--other.syntax--variable,\n.syntax--string.syntax--other.syntax--link,\n.syntax--entity.syntax--name.syntax--tag,\n.syntax--entity.syntax--other.syntax--attribute-name,\n.syntax--meta.syntax--tag,\n.syntax--declaration.syntax--tag`\n\n* `.constant.numeric,\n.constant.language,\n.support.constant,\n.constant.character,\n.variable.parameter,\n.punctuation.section.embedded,\n.keyword.other.unit` => `.syntax--constant.syntax--numeric,\n.syntax--constant.syntax--language,\n.syntax--support.syntax--constant,\n.syntax--constant.syntax--character,\n.syntax--variable.syntax--parameter,\n.syntax--punctuation.syntax--section.syntax--embedded,\n.syntax--keyword.syntax--other.syntax--unit`\n\n* `.entity.name.class,\n.entity.name.type.class,\n.support.type,\n.support.class` => `.syntax--entity.syntax--name.syntax--class,\n.syntax--entity.syntax--name.syntax--type.syntax--class,\n.syntax--support.syntax--type,\n.syntax--support.syntax--class`\n\n* `.string,\n.constant.other.symbol,\n.entity.other.inherited-class,\n.markup.heading` => `.syntax--string,\n.syntax--constant.syntax--other.syntax--symbol,\n.syntax--entity.syntax--other.syntax--inherited-class,\n.syntax--markup.syntax--heading`\n\n* `.keyword.operator,\n.constant.other.color` => `.syntax--keyword.syntax--operator,\n.syntax--constant.syntax--other.syntax--color`\n\n* `.entity.name.function,\n.meta.function-call,\n.support.function,\n.keyword.other.special-method,\n.meta.block-level` => `.syntax--entity.syntax--name.syntax--function,\n.syntax--meta.syntax--function-call,\n.syntax--support.syntax--function,\n.syntax--keyword.syntax--other.syntax--special-method,\n.syntax--meta.syntax--block-level`\n\n* `.keyword,\n.storage,\n.storage.type,\n.entity.name.tag.css` => `.syntax--keyword,\n.syntax--storage,\n.syntax--storage.syntax--type,\n.syntax--entity.syntax--name.syntax--tag.syntax--css`\n\n* `.invalid` => `.syntax--invalid`\n\n* `.meta.separator` => `.syntax--meta.syntax--separator`\n\n* `.invalid.deprecated` => `.syntax--invalid.syntax--deprecated`\n\nAutomatic translation of selectors will be removed in a few release cycles to minimize startup time. Please, make sure to upgrade the above selectors as soon as possible."}